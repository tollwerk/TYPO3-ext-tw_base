!function(e,r){"use strict";function t(){this.observed=[["[data-mutate-recursive]",this.process.bind(this)]];var t=this.checkNode.bind(this);new MutationObserver(function(e){return e.forEach(function(e){return Array.prototype.slice.call(e.addedNodes).filter(function(e){return 1===e.nodeType}).forEach(t)})}).observe(r.documentElement,{characterData:!0,attributes:!1,childList:!0,subtree:!0})}"undefined"!=typeof exports&&exports.Observer||e.Tollwerk.Observer||(t.prototype.register=function(e,t){this.observed.push([e,t])},t.prototype.checkNode=function(t){this.observed.filter(function(e){return t.matches(e[0])}).forEach(function(e){return e[1](t)})},t.prototype.process=function(e){1===e.nodeType&&this.observed.forEach(function(t){return e.querySelectorAll(t[0]).forEach(function(e){return t[1](e)})})},"undefined"!=typeof exports?exports.Observer=new t:e.Tollwerk.Observer=new t)}("undefined"!=typeof global?global:window,document);