{"version":3,"sources":["JavaScript/000_Base/_Script.js","JavaScript/005_Polyfill/_Script.js","JavaScript/010_FeatureDetection/_Script.js","JavaScript/015_Initializer/_Script.js","JavaScript/020_Observer/_Script.js","JavaScript/025_BreakpointManager/_Script.js","JavaScript/030_LazyLoading/_Script.js","JavaScript/035_HitArea/_Script.js"],"names":["Tollwerk","window","has","w","e","s","svg","_this","this","NodeList","prototype","forEach","callback","thisArg","i","length","call","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","document","ownerDocument","querySelectorAll","item","closest","el","parentElement","parentNode","nodeType","format","args","arguments","replace","match","number","Object","defineProperty","get","contains","className","baseVal","split","indexOf","add","setAttribute","getAttribute","remove","removedClass","RegExp","classList","Element","String","SVGElement","d","documentElement","srcset","createElement","lazyload","HTMLImageElement","querySelector","ignoredError","addEventListener","touched","removeEventListener","Initializer","_onReady","_onDisplay","exports","Init","registerOnReady","push","registerOnDisplay","run","c","display","bind","global","Observer","observed","process","checkNode","MutationObserver","mutations","mutation","Array","slice","addedNodes","filter","node","observe","characterData","attributes","childList","subtree","register","selectors","observer","subnode","debounce","BreakpointManager","delay","components","resizables","adapt","count","breakpoint","currentBreakpoint","resize","breakPoint","parseInt","getComputedStyle","zIndex","isNaN","adaptComponent","component","nextState","state","states","lower","upper","teardown","setup","r","clearTimeout","setTimeout","registerComponent","_debounce","id","reg","unshift","apply","element","getCurrentBreakpoint","registerResizable","resizable","deregisterResizable","listen","win","removeAttribute","img","src","dataset","lazysizes_1","libDir_1","requireScript","script","defer","body","appendChild","a","hitAreaID","hitArea","getElementById","preventDefault","location","href"],"mappings":"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","file":"tw_base-default.min.js","sourcesContent":["'use strict';\n\n/**\n * Tollwerk namespace\n *\n * @type {Object}\n */\nconst Tollwerk = window.Tollwerk || { has: {} };\n","(function (w, e, s, svg) {\n    'use strict';\n\n    // NodeList.forEach\n    if (window.NodeList && !NodeList.prototype.forEach) {\n        NodeList.prototype.forEach = function (callback, thisArg) {\n            thisArg = thisArg || window;\n            for (let i = 0; i < this.length; ++i) {\n                callback.call(thisArg, this[i], i, this);\n            }\n        };\n    }\n\n    // Element.matches\n    if (!e.matches) {\n        e.matches =\n            e.matchesSelector ||\n            e.mozMatchesSelector ||\n            e.msMatchesSelector ||\n            e.oMatchesSelector ||\n            e.webkitMatchesSelector ||\n            (s => {\n                const matches = (this.document || this.ownerDocument).querySelectorAll(s);\n                let i = matches.length;\n                while ((--i >= 0) && (matches.item(i) !== this)) {\n                }\n                return i > -1;\n            });\n    }\n\n    // Element.closest\n    if (!e.closest) {\n        e.closest = function (s) {\n            let el = this;\n            do {\n                if (el.matches(s)) return el;\n                el = el.parentElement || el.parentNode;\n            } while (el !== null && el.nodeType === 1);\n            return null;\n        };\n    }\n\n    // String.format\n    if (!s.format) {\n        s.format = function () {\n            const args = arguments;\n            return this.replace(/{(\\d+)}/g, (match, number) => typeof args[number] !== 'undefined' ? args[number] : match);\n        };\n    }\n\n    // classList support for IE11\n    if (!('classList' in svg)) {\n        Object.defineProperty(svg, 'classList', {\n            get() {\n                return {\n                    contains: className => {\n                        return this.className.baseVal.split(' ').indexOf(className) !== -1;\n                    },\n                    add: className => {\n                        return this.setAttribute('class', this.getAttribute('class') + ' ' + className);\n                    },\n                    remove: className => {\n                        var removedClass = this.getAttribute('class').replace(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)', 'g'), '$2');\n                        if (this.classList.contains(className)) {\n                            this.setAttribute('class', removedClass);\n                        }\n                    }\n                };\n            }\n        });\n    }\n})(window, Element.prototype, String.prototype, SVGElement.prototype);\n","(function (w, d) {\n    'use strict';\n\n    const root = d.documentElement;\n    const classList = root.classList;\n\n    // Announce JavaScript support\n    classList.remove('no-js');\n    classList.add('has-js');\n\n    // Test srcset support\n    w.Tollwerk.has.srcset = ('srcset' in d.createElement('img'));\n    classList.add(`${w.Tollwerk.has.srcset ? 'has' : 'no'}-srcset`);\n\n    w.Tollwerk.has.lazyload = ('loading' in HTMLImageElement.prototype);\n    classList.add(`${w.Tollwerk.has.lazyload ? 'has' : 'no'}-lazyload`);\n\n    // :focus-within mini polyfill\n    try {\n        d.querySelector(':focus-within');\n        classList.add('has-focus-within');\n    } catch (ignoredError) {\n        classList.add('no-focus-within');\n    }\n\n    // Debounced touch detection\n    w.addEventListener('touchstart', function touched() {\n        classList.add('has-touch');\n        w.removeEventListener('touchstart', touched, false);\n    }, false)\n})(window, document);\n","(function (w, d) {\n    'use strict';\n\n    if (((typeof exports !== 'undefined') && exports.Init) || w.Tollwerk.Init) {\n        return;\n    }\n\n    /**\n     * Initializer constructor\n     *\n     * @constructor\n     */\n    function Initializer() {\n        this._onReady = [];\n        this._onDisplay = [];\n    }\n\n    /**\n     * Register an onDocumentReady callback\n     *\n     * @param {Function} callback Callback\n     */\n    Initializer.prototype.registerOnReady = function (callback) {\n        (this._onReady === null) ? callback() : this._onReady.push(callback);\n    }\n\n    /**\n     * Register an onDisplay callback\n     *\n     * @param {Function} callback Callback\n     */\n    Initializer.prototype.registerOnDisplay = function (callback) {\n        (this._onDisplay === null) ? callback() : this._onDisplay.push(callback);\n    }\n\n    /**\n     * Run initializers\n     */\n    Initializer.prototype.run = function () {\n        for (var c = 0; c < this._onReady.length; ++c) {\n            this._onReady[c]();\n        }\n        this._onReady = null;\n    }\n\n    /**\n     * Run display routines\n     */\n    Initializer.prototype.display = function () {\n        for (var c = 0; c < this._onDisplay.length; ++c) {\n            this._onDisplay[c]();\n        }\n        this._onDisplay = null;\n    }\n\n    // Export as CommonJS module\n    if (typeof exports !== 'undefined') {\n        exports.Init = new Initializer();\n\n        // Else create a global instance\n    } else {\n        w.Tollwerk.Init = new Initializer();\n        d.addEventListener('load', Initializer.prototype.display.bind(w.Tollwerk.Init));\n        w.addEventListener('DOMContentLoaded', Initializer.prototype.run.bind(w.Tollwerk.Init));\n    }\n})(typeof global !== 'undefined' ? global : this, document);\n","(function (w, d) {\n    'use strict';\n\n    if (((typeof exports !== 'undefined') && exports.Observer) || w.Tollwerk.Observer) {\n        return;\n    }\n\n    /**\n     * Observer constructor\n     *\n     * @constructor\n     */\n    function Observer() {\n        this.observed = [['[data-mutate-recursive]', this.process.bind(this)]];\n\n        const checkNode = this.checkNode.bind(this);\n        const observer = new MutationObserver(mutations => mutations\n            .forEach(mutation => Array.prototype.slice.call(mutation.addedNodes)\n                .filter(node => node.nodeType === 1).forEach(checkNode))\n        );\n\n        observer.observe(d.documentElement, { characterData: true, attributes: false, childList: true, subtree: true });\n    }\n\n    /**\n     * Register a new selector / callback pair\n     *\n     * @param {String} selectors Selectors\n     * @param {Function} callback Callback\n     */\n    Observer.prototype.register = function (selectors, callback) {\n        this.observed.push([selectors, callback]);\n    }\n\n    /**\n     * Check whether a newly created node should be processed\n     *\n     * @param {Element} node Node\n     */\n    Observer.prototype.checkNode = function (node) {\n        this.observed.filter(observer => node.matches(observer[0])).forEach(observer => observer[1](node));\n    }\n\n    /**\n     * Run all callbacks on a particular node and its children\n     *\n     * @param {Element} node Node\n     */\n    Observer.prototype.process = function (node) {\n        if (node.nodeType === 1) {\n            this.observed.forEach(observer => node.querySelectorAll(observer[0])\n                .forEach(subnode => observer[1](subnode)));\n        }\n    }\n\n    // Export as CommonJS module\n    if (typeof exports !== 'undefined') {\n        exports.Observer = new Observer();\n\n        // Else create a global instance\n    } else {\n        w.Tollwerk.Observer = new Observer();\n    }\n})(typeof global !== 'undefined' ? global : window, document);\n","(function (w, d) {\n    'use strict';\n\n    let debounce = null;\n\n    /**\n     * Breakpoint manager constructor\n     *\n     * @param {Number} delay Debounce delay\n     * @constructor\n     */\n    function BreakpointManager(delay) {\n        this.delay = delay;\n        this.components = {};\n        this.resizables = [];\n        this.callback = this.adapt.bind(this);\n        this.count = 0;\n        this.breakpoint = this.currentBreakpoint();\n        this.resize();\n    }\n\n    /**\n     * Return the current breakpoint\n     *\n     * @return {Number} Current breakpoint\n     */\n    BreakpointManager.prototype.currentBreakpoint = function () {\n        const breakPoint = parseInt(w.getComputedStyle(d.documentElement).zIndex, 10);\n        return isNaN(breakPoint) ? 0 : breakPoint;\n    }\n\n    /**\n     * Adapt a single component\n     *\n     * @param {Object} component Component\n     */\n    BreakpointManager.prototype.adaptComponent = function (component) {\n        // Run through all defined states and determine the future one\n        let nextState = null;\n        for (let s = 0, state; s < component.states.length; ++s) {\n            state = component.states[s];\n            if (((state.lower === null) || (this.breakpoint >= state.lower)) && ((state.upper === null) || (this.breakpoint <= state.upper))) {\n                nextState = s;\n                break;\n            }\n        }\n\n        // If a state adaption is required\n        if (nextState !== component.state) {\n            // Tear down the current state\n            if (component.state !== null) {\n                component.states[component.state].teardown();\n                component.state = null;\n            }\n\n            // Setup the future state\n            if (nextState !== null) {\n                component.states[nextState].setup();\n                component.state = nextState;\n            }\n        }\n    }\n\n    /**\n     * Adapt to resized window\n     */\n    BreakpointManager.prototype.adapt = function () {\n        this.breakpoint = this.currentBreakpoint();\n\n        // Run through all components and adapt\n        for (const c in this.components) {\n            this.adaptComponent(this.components[c]);\n        }\n\n        // Run through all resizable callbacks\n        for (let r = 0; r < this.resizables.length; ++r) {\n            this.resizables[r]();\n        }\n    }\n\n    /**\n     * Debounced listening to resize events\n     */\n    BreakpointManager.prototype.resize = function () {\n\n        // Clear the running timeout (if any)\n        clearTimeout(debounce);\n\n        // Set a timeout to adapt\n        debounce = setTimeout(this.callback, this.delay);\n    }\n\n    /**\n     * Register a component for breakpoint based construction / descruction\n     *\n     * @param {Element} component Component\n     * @param {Number|Array} lower Lower breakpoint or Array of registrations\n     * @param {Number} upper Upper breakpoint\n     * @param {Function} setup Setup callback\n     * @param {Function} teardown Teardown callback\n     * @param {Boolean} _debounce Debounce rendering\n     * @return {Number} Number of registered components\n     * @throws {String} If the setup callback is not a function\n     * @throws {String} If the teardown callback is not a function\n     */\n    BreakpointManager.prototype.registerComponent = function (component, lower, upper, setup, teardown, _debounce) {\n        component.id = component.id || ('bpm-' + this.count);\n\n        // If an array of registrations is given\n        if (lower instanceof Array) {\n\n            // Run through all registrations\n            for (let c = 0; c < lower.length; ++c) {\n                if (lower[c] instanceof Array) {\n                    const reg = lower[c];\n                    reg.unshift(component);\n                    reg[5] = true;\n                    this.registerComponent.apply(this, reg);\n                }\n            }\n\n            // Else if it's a single component registration\n        } else {\n            if (typeof setup !== 'function') {\n                throw 'BreakpointManager: setup callback must be a function';\n            }\n            if (typeof teardown !== 'function') {\n                throw 'BreakpointManager: teardown callback must be a function';\n            }\n\n            // If this is the first time the component is registered\n            if (!(component.id in this.components)) {\n                this.components[component.id] = { state: null, states: [], element: component };\n                ++this.count;\n            }\n\n            // Register the component state\n            this.components[component.id].states.push({\n                lower: lower,\n                upper: upper,\n                setup: setup.bind(component),\n                teardown: teardown.bind(component)\n            });\n        }\n\n        // If rendering shouldn't be debounced further\n        if (!_debounce) {\n            this.adaptComponent(this.components[component.id]);\n        }\n\n        return this.count;\n    }\n\n    /**\n     * Get current breakpoint\n     * @returns {Number}\n     */\n    BreakpointManager.prototype.getCurrentBreakpoint = function () {\n        return this.currentBreakpoint();\n    }\n\n    /**\n     * Register a resizable callback\n     *\n     * @param {Function} resizable Resizable callback\n     */\n    BreakpointManager.prototype.registerResizable = function (resizable) {\n        if (typeof resizable === 'function') {\n            this.resizables.push(resizable);\n        }\n    }\n\n    /**\n     * Deregister a resizable callback\n     *\n     * @param {Function} resizable Resizable callback\n     */\n    BreakpointManager.prototype.deregisterResizable = function (resizable) {\n        if (typeof resizable === 'function') {\n            this.resizables = this.resizables.filter(function (r) {\n                return r !== resizable;\n            });\n        }\n    }\n\n    /**\n     * Listen to resize events\n     *\n     * @param {Window} win Window\n     */\n    BreakpointManager.prototype.listen = function (win) {\n        win.addEventListener('resize', this.resize.bind(this));\n        win.addEventListener('DOMContentLoaded', this.resize.bind(this));\n    }\n\n    // Export as CommonJS module\n    if (typeof exports !== 'undefined') {\n        exports.BreakpointManager = new BreakpointManager(100);\n\n        // Else create a global instance\n    } else {\n        w.Tollwerk.BreakpointManager = new BreakpointManager(100);\n        w.Tollwerk.BreakpointManager.listen(w);\n    }\n\n})(typeof global !== 'undefined' ? global : this, document);\n","(function (w, d) {\n    // Enable / disable srcset\n    const removeAttribute = w.Tollwerk.has.srcset ? 'src' : 'srcset';\n    w.Tollwerk.Observer.register('img[srcset][src]', img => img.removeAttribute(removeAttribute));\n\n    // Enable native lazyloading\n    if (w.Tollwerk.has.lazyload) {\n        w.Tollwerk.Observer.register(`img[loading=lazy][src][data-src]`, img => {\n            img.src = img.dataset.src;\n            img.removeAttribute('data-src');\n        });\n        w.Tollwerk.Observer.register(`img[loading=lazy][data-srcset]`, img => {\n            img.srcset = img.dataset.srcset;\n            img.removeAttribute('src');\n            img.removeAttribute('data-srcset');\n        });\n    } else {\n        let lazysizes = null;\n        const libDir = '/typo3conf/ext/tw_base/Resources/Public/JavaScript/Lib/';\n\n        /**\n         * Asynchronously require an external script\n         *\n         * @param {String} src Script source\n         * @param {Element} Script node\n         */\n        function requireScript(src) {\n            const script = d.createElement('script');\n            script.defer = true;\n            script.src = src;\n            d.body.appendChild(script);\n            return script;\n        }\n\n        w.Tollwerk.Observer.register(`img[loading=lazy]`, img => {\n            img.classList.add('lazyload');\n            if (!lazysizes) {\n                lazysizes = requireScript(`${libDir}lazysizes.min.js`) &&\n                    (w.Tollwerk.has.srcset || requireScript(`${libDir}ls.respimg.min.js`));\n            }\n        });\n    }\n})(window, document);\n","(function (w, d) {\n    w.Tollwerk.Observer.register('a[href][data-hit-area]', a => {\n        const hitAreaID = a.dataset.hitArea;\n        const hitArea = hitAreaID ? d.getElementById(hitAreaID) : null;\n        if (hitArea) {\n            hitArea.classList.add('is-hit-area');\n            hitArea.addEventListener('click', e => {\n                e.preventDefault();\n                d.location = a.href;\n            }, true);\n            a.addEventListener('focus', () => hitArea.classList.add('hit-area-focused'), true);\n            a.addEventListener('blur', () => hitArea.classList.remove('hit-area-focused'), true);\n        }\n    });\n\n})(window, document);\n"]}